<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blog on Ian Ovenell</title><link>https://ovenell.ninja/categories/blog/</link><description>Recent content in blog on Ian Ovenell</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 16 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ovenell.ninja/categories/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Hunt for broken Customer Request Types in Jira Service Desk Jira Service Management</title><link>https://ovenell.ninja/posts/hunt-for-broken-customer-request-types-in-jira-service-desk-or-jira-service-management/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/hunt-for-broken-customer-request-types-in-jira-service-desk-or-jira-service-management/</guid><description>Looks for conditions where a customer request type is not set in a project or set to a blank value and outputs a JQL search for identifying these issues in the Advanced Issue Search
$Text = &amp;#39;&amp;lt;youratlassianusernamehere&amp;gt;:&amp;lt;youratlassianapitokenhere&amp;gt;&amp;#39; $Bytes = [System.Text.Encoding]::UTF8.GetBytes($Text) $EncodedText = [Convert]::ToBase64String($Bytes) $EncodedText $projectKey = &amp;#39;DIGI&amp;#39; $jqlQuery = &amp;#34;project = $projectKey&amp;#34; $jqlEncoded = [System.Web.HttpUtility]::UrlEncode(&amp;#34;$jqlQuery&amp;#34;) $Text = &amp;#39;&amp;lt;youratlassianusernamehere&amp;gt;:&amp;lt;youratlassianapitokenhere&amp;gt;&amp;#39; $Bytes = [System.Text.Encoding]::UTF8.GetBytes($Text) $EncodedText = [Convert]::ToBase64String($Bytes) $EncodedText $Uri = &amp;#34;https://wecu.atlassian.net/rest/api/3/search?jql=$jqlEncoded&amp;#34; $Method = &amp;#34;GET&amp;#34; $headers = @{ &amp;#39;Authorization&amp;#39; = &amp;#34;Basic $EncodedText&amp;#34; &amp;#39;Content-Type&amp;#39; = &amp;#39;application/json&amp;#39; } $Response = Invoke-RestMethod -Uri $Uri -Method $Method -Headers $headers $totalResults = $Response.</description></item><item><title>Create an Azure GPU-backed Nvidia CUDA Worker Node via Azure CLI</title><link>https://ovenell.ninja/posts/create-an-azure-gpu-backed-cuda-worker-node/</link><pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/create-an-azure-gpu-backed-cuda-worker-node/</guid><description>Login into Azure CLI as a service principal
az login \ --service-principal \ -u ${ARM_CLIENT_ID} \ -p ${ARM_CLIENT_SECRET} \ --tenant ${ARM_TENANT_ID} Search for Azure virtual machines available in a specific region
az vm list-sizes -l eastus | grep Standard_N Login with az service principal
az login --service-principal -u ${ARM_CLIENT_ID} -p ${ARM_CLIENT_SECRET} --tenant ${ARM_TENANT_ID} List all accounts in subscription
az account list Set the active Azure subscription
az account set --subscription ${ARM_SUBSCRIPTION_ID} Create a new Azure resource group in the eastus region</description></item><item><title>Useful ADB Oneliners</title><link>https://ovenell.ninja/posts/useful-adb-oneliners/</link><pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/useful-adb-oneliners/</guid><description>Gets screen capture of device every 270 seconds and outputs screencap to timestamped png file in local directory
while true; do adb shell screencap -p | perl -pe &amp;#39;s/\x0D\x0A/\x0A/g&amp;#39; &amp;gt; ScreenCap.`date +%Y`.`date +%m`.`date+%d`-`date +%H`.`date +%M`.`date +%S`.png; sleep 270; done Gets logs from device and outputs them to a timestamped file in local directory
while true; do adb logcat -v time &amp;gt; logging`date +%Y`.`date +%m`.`date +%d`-`date +%H`.`date +%M`.`date +%S`txt; done Gets PID of adb shell ps | grep &amp;lt;packagename&amp;gt; Outputs battery level to console</description></item><item><title>Useful Jira Service Desk curl examples</title><link>https://ovenell.ninja/posts/useful-jira-service-desk-curl-examples/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/useful-jira-service-desk-curl-examples/</guid><description>Creates a new issue with custom fields
curl -D- -u uname:pass -X POST --data &amp;#34;{\&amp;#34;fields\&amp;#34;: {\&amp;#34;project\&amp;#34;: { \&amp;#34;id\&amp;#34;: \&amp;#34;10430\&amp;#34; },\&amp;#34;summary\&amp;#34;: \&amp;#34;This is a test issue\&amp;#34;, \&amp;#34;description\&amp;#34;: \&amp;#34;Description\&amp;#34;,\&amp;#34;issuetype\&amp;#34;: { \&amp;#34;id\&amp;#34; : \&amp;#34;1\&amp;#34;}, \&amp;#34;components\&amp;#34; : [{\&amp;#34;id\&amp;#34;:\&amp;#34;10731\&amp;#34;}], \&amp;#34;customfield_10711\&amp;#34; : [{\&amp;#34;id\&amp;#34;:\&amp;#34;10500\&amp;#34;}] } }&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; http://localhost:8080/jira/rest/api/2/issue/ Returns all information for all versions
curl -D- -u uname:pass -X PUT -d &amp;#34;Content-Type: application/json&amp;#34; http://localhost:8080/jira/rest/api/2/project/AN/versions? Returns all issues in a version This URL requires the version ID of a single version which is provided by the above query</description></item><item><title>10 Useful Azure CLI Commands - Part 1</title><link>https://ovenell.ninja/posts/10-useful-azure-cli-commands-part-1/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/10-useful-azure-cli-commands-part-1/</guid><description>Login into Azure CLI as a service principal
az login \ --service-principal \ -u ${ARM_CLIENT_ID} \ -p ${ARM_CLIENT_SECRET} \ --tenant ${ARM_TENANT_ID} Search for Azure virtual machines available in a specific region
az vm list-sizes -l eastus | grep Standard_N Login with az service principal
az login --service-principal -u ${ARM_CLIENT_ID} -p ${ARM_CLIENT_SECRET} --tenant ${ARM_TENANT_ID} List all accounts in subscription
az account list Set the active Azure subscription
az account set --subscription ${ARM_SUBSCRIPTION_ID} Create a new Azure resource group in the eastus region</description></item><item><title>Enum All The Things</title><link>https://ovenell.ninja/notes/enum-all-the-things/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/notes/enum-all-the-things/</guid><description>Table of Contents Table of Contents Recon File enumeration Disk files Images Audio Port 7 - Echo tcp/udp Port 21 - FTP Port 22 - SSH Port 23 - Telnet Port 25 - Telnet Port 43 - WHOIS Port 53 - DNS Port 69 - UDP - TFTP Port 79 - Finger Kerberos - 88 Port 110 - POP3 Port 995 / 110 - POP Port 111 - Rpcbind Port 113 - Ident Port 123 - TNP Port 135 - MSRPC Port 139/445 - SMB Port 143 / 993- IMAP Port 161/162 UDP - SNMP Port - 194,6667,6660-7000 - IRC Port 264 - Check Point FireWall-1 LDAP - 389, 636, 3268, 3269 HTTPS - 443 Port 500 - ISAKMP IPsec/IKE VPN Port 502 - Modbus Port 512 - Rexec Port 513 - Rlogin Port 514 - RSH Port 515 - line printerdaemon LPd Port 541 - FortiNet SSLVPN Port 548 - Apple Filing Protocol (AFP) Port 554 - RTSP Port 623 / UDP / TCP - IPMI Port 631 - Internet Printing Protocol(IPP) Port 873 - Rsync Port 1026 - Rusersd Port 1028 / 1099 - Java RMI Port 1030/1032/1033/1038 MSSQL - 1433 Port 1521 - Oracle Port 1723 - PPTP Port 1883 - MQTT (Mosquitto) Port 2049 - NFS TNS Listener Port 2100 - Oracle XML DB Port 3260 - ISCSI Port 3299 - SAPRouter MySQL - 3306 Port 3339 - Oracle web interface Port 3389 - RDP Port 3632 - distcc Port 4369 - Erlang Port Mapper Daemon (epmd) Port 5353 / UDP - Multicast DNS (mDNS) Port 5432 / 5433 - Postgresql Port 5671 - AMQP Port 5985 / 5986 - WinRM VNC - 5800 / 5801 / 5900 / 5901 - VNC Port 5984 - CouchDB Port 6000 - X11 Port 8009 - Apache JServ Protocol (AJP) MsDeploy - 8172 Webdav Port 9042 / 9160 - Cassandra Port 9100 - Raw Printing (JetDirect, AppSocket, PDL-datastream) Port 9200 - Elasticsearch Port 10000 - Network Data Management Protocol (ndmp) Port 11211 - Memcache Port 15672 - RabbitMQ Management Port 27017 / 27018 - MongoDB Port 44818 / UDP / TCP - EthernetIP Port 47808 / udp - BACNet Port 50030 / 50060 / 50070 / 50075 / 50090 - Hadoop Unknown ports Port 80 - web server Url Brutforce Default_Weak login LFI-RFI Sql-injection XSS Sql-login Bypass Bypass img Upload Online crackers Vulnerability analysis Buffer Overflow Find xploits - Searchsploit and google Reverse Sells Privilege escalation Common Set up Webserver Set up FTP Server Filet ransfer Linux Basic info Kernel exploits Programs running as root Installed software Weak/reused/plaintext passwords Inside service Suid misconfiguration Unmounted filesystems Cronjob SSH Keys Bad path configuration) PS Monitor for cron Linux Privesc Tools Linux Precompiled Exploits Windows Basic info Kernel exploits Cleartext passwords Reconfigure service parameters Dump process for passwords Inside service Programs running as root/system Installed software Scheduled tasks Weak passwords Add user and enable RDP Powershell sudo for Windows Windows download with bitsadmin Windows download with certutil.</description></item><item><title>Useful Bash Oneliners - Part 1</title><link>https://ovenell.ninja/notes/useful-bash-oneliners-part-1/</link><pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/notes/useful-bash-oneliners-part-1/</guid><description>Dump mobile tabs from brave via adb
adb forward tcp:9222 localabstract:chrome_devtools_remote; \ curl http://localhost:9222/json/list | \ jq -r &amp;#34;.[] | \&amp;#34;[\&amp;#34; + .title + \&amp;#34;](\&amp;#34; + .url + \&amp;#34;)\&amp;#34; + \&amp;#34; \&amp;#34;&amp;#34; \ &amp;gt; brave.mobile.tabs.md Dump mobile tabs from chrome via adb
adb forward tcp:9222 localabstract:chrome_devtools_remote_13720; \ curl http://localhost:9222/json/list | \ jq -r &amp;#34;.[] | \&amp;#34;[\&amp;#34; + .title + \&amp;#34;](\&amp;#34; + .url + \&amp;#34;)\&amp;#34; + \&amp;#34; \&amp;#34;&amp;#34; \ &amp;gt; chrome.mobile.tabs.md Login into Azure CLI as a service principal</description></item><item><title>MegaSquirt® &amp; Microsquirt - How To Setup TunerStudioMS</title><link>https://ovenell.ninja/notes/how-to-setup-tunerstudio-megasquirt-microsquirt/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/notes/how-to-setup-tunerstudio-megasquirt-microsquirt/</guid><description>How To Setup TunerStudioMS - DIYAutoTune.com Before beginning the procedure this article outlines, please be sure that that you have already downloaded and installed our software package to your tuning laptop, and you have installed firmware into your MegaSquirt ECU.
Step 1. Plugging up.
If you just finished installing firmware to your MegaSquirt ECU, you probablly are already powered up and connected to your tuning laptop. If not, let&amp;rsquo;s go ahead and connect your MegaSquirt ECU to your laptop and supply 12 volts.</description></item><item><title>MegaSquirt® Connection Troubleshooting</title><link>https://ovenell.ninja/notes/megasquirt-troubleshooting/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/notes/megasquirt-troubleshooting/</guid><description>MegaSquirt® Connection Troubleshooting MegaSquirt® Connection Troubleshooting
| &amp;mdash;&amp;ndash; | | Click on our menu buttons immediately below to find MegaSquirt® information quickly:
MicroSquirt® Module V1/V2 MicroSquirt® Important
Safety
Information MicroSquirt®
Support
Forum MShift™ TCU MShift™ Intro GPIO Build Guide for 4L60E Base circuits GPO1, GPO2, GPO3,
GPO4 (gear LEDs) VB1, VB2, VB3, VB4 PWM1, PWM2, PWM3, PWM4 GPI1, GPI2, GPI5
(2/4WD, Input2, downshift) GPI3 (Temperature) GPI4 (Brake sense) EGT1, EGT2, EGT3,</description></item><item><title>MicroSquirt V3 - Subaru Configuration Notes</title><link>https://ovenell.ninja/notes/subaru-ms-config-notes/</link><pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/notes/subaru-ms-config-notes/</guid><description>MicroSquirt V3 - Subaru Configuration Notes Version: MicroSquirt V3 as shown above running firmware MS2/Extra 3.4.x
Ignition Tach Input Note: A tach input is required on ALL installs including fuel-only The tach input is one of the most important signals going into the Microsquirt and correct system operation is not possible until the tach input is correctly installed and configured. Until the Microsquirt reads the correct RPM, nothing else will work.</description></item><item><title>ADB port forwarding and reversing</title><link>https://ovenell.ninja/notes/android-adb-forwarding-reversing/</link><pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/notes/android-adb-forwarding-reversing/</guid><description>ADB port forwarding and reversing | Android ADB(Android Debug Bridge)
Android Debug Bridge (adb) is a versatile command-line tool that lets you communicate with a device. The adb command facilitates a variety of device actions, such as installing and debugging apps, and it provides access to a Unix shell that you can use to run a variety of commands on a device. It is a client-server program that includes three components:</description></item><item><title>Creating a Hugo site on GitHub Pages</title><link>https://ovenell.ninja/notes/creating-hugo-site-github-pages/</link><pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/notes/creating-hugo-site-github-pages/</guid><description>Creating a Hugo site on GitHub Pages So I&amp;rsquo;ve just begun my journey as a web developer and I was stumbling along trying to create a website when I came across an awesome static site generator called Hugo!
This is my first post so I hope it&amp;rsquo;s useful :)
Hugo self-proclaims that they are the &amp;ldquo;fastest framework for building websites,&amp;rdquo; and I have to say they&amp;rsquo;ve made the task pretty simple even for a beginner like me!</description></item><item><title>Interesting Links</title><link>https://ovenell.ninja/notes/interesting-links/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/notes/interesting-links/</guid><description>10 Best Machine Learning Textbooks that All Data Scientists Should Read
10 Best Machine Learning Textbooks that All Data Scientists Should Read
14 @ January @ 2020 @ AskWoody
14 @ January @ 2020 @ AskWoody
1962-1963 Chevy/GMC LS Swap - LSx Everything
1962-1963 Chevy/GMC LS Swap - LSx Everything
2020 General Election Early Vote Statistics
2020 General Election Early Vote Statistics
20 Macs For 2020: #15 – DayStar Genesis MP – Six Colors</description></item></channel></rss>