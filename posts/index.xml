<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Ian Ovenell</title><link>https://ovenell.ninja/posts/</link><description>Recent content in Posts on Ian Ovenell</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 16 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ovenell.ninja/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Hunt for broken Customer Request Types in Jira Service Desk Jira Service Management</title><link>https://ovenell.ninja/posts/hunt-for-broken-customer-request-types-in-jira-service-desk-or-jira-service-management/</link><pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/hunt-for-broken-customer-request-types-in-jira-service-desk-or-jira-service-management/</guid><description>Looks for conditions where a customer request type is not set in a project or set to a blank value and outputs a JQL search for identifying these issues in the Advanced Issue Search
$Text = &amp;#39;&amp;lt;youratlassianusernamehere&amp;gt;:&amp;lt;youratlassianapitokenhere&amp;gt;&amp;#39; $Bytes = [System.Text.Encoding]::UTF8.GetBytes($Text) $EncodedText = [Convert]::ToBase64String($Bytes) $EncodedText $projectKey = &amp;#39;DIGI&amp;#39; $jqlQuery = &amp;#34;project = $projectKey&amp;#34; $jqlEncoded = [System.Web.HttpUtility]::UrlEncode(&amp;#34;$jqlQuery&amp;#34;) $Text = &amp;#39;&amp;lt;youratlassianusernamehere&amp;gt;:&amp;lt;youratlassianapitokenhere&amp;gt;&amp;#39; $Bytes = [System.Text.Encoding]::UTF8.GetBytes($Text) $EncodedText = [Convert]::ToBase64String($Bytes) $EncodedText $Uri = &amp;#34;https://wecu.atlassian.net/rest/api/3/search?jql=$jqlEncoded&amp;#34; $Method = &amp;#34;GET&amp;#34; $headers = @{ &amp;#39;Authorization&amp;#39; = &amp;#34;Basic $EncodedText&amp;#34; &amp;#39;Content-Type&amp;#39; = &amp;#39;application/json&amp;#39; } $Response = Invoke-RestMethod -Uri $Uri -Method $Method -Headers $headers $totalResults = $Response.</description></item><item><title>Create an Azure GPU-backed Nvidia CUDA Worker Node via Azure CLI</title><link>https://ovenell.ninja/posts/create-an-azure-gpu-backed-cuda-worker-node/</link><pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/create-an-azure-gpu-backed-cuda-worker-node/</guid><description>Login into Azure CLI as a service principal
az login \ --service-principal \ -u ${ARM_CLIENT_ID} \ -p ${ARM_CLIENT_SECRET} \ --tenant ${ARM_TENANT_ID} Search for Azure virtual machines available in a specific region
az vm list-sizes -l eastus | grep Standard_N Login with az service principal
az login --service-principal -u ${ARM_CLIENT_ID} -p ${ARM_CLIENT_SECRET} --tenant ${ARM_TENANT_ID} List all accounts in subscription
az account list Set the active Azure subscription
az account set --subscription ${ARM_SUBSCRIPTION_ID} Create a new Azure resource group in the eastus region</description></item><item><title>Useful ADB Oneliners</title><link>https://ovenell.ninja/posts/useful-adb-oneliners/</link><pubDate>Mon, 14 Jun 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/useful-adb-oneliners/</guid><description>Gets screen capture of device every 270 seconds and outputs screencap to timestamped png file in local directory
while true; do adb shell screencap -p | perl -pe &amp;#39;s/\x0D\x0A/\x0A/g&amp;#39; &amp;gt; ScreenCap.`date +%Y`.`date +%m`.`date+%d`-`date +%H`.`date +%M`.`date +%S`.png; sleep 270; done Gets logs from device and outputs them to a timestamped file in local directory
while true; do adb logcat -v time &amp;gt; logging`date +%Y`.`date +%m`.`date +%d`-`date +%H`.`date +%M`.`date +%S`txt; done Gets PID of adb shell ps | grep &amp;lt;packagename&amp;gt; Outputs battery level to console</description></item><item><title>Useful Jira Service Desk curl examples</title><link>https://ovenell.ninja/posts/useful-jira-service-desk-curl-examples/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/useful-jira-service-desk-curl-examples/</guid><description>Creates a new issue with custom fields
curl -D- -u uname:pass -X POST --data &amp;#34;{\&amp;#34;fields\&amp;#34;: {\&amp;#34;project\&amp;#34;: { \&amp;#34;id\&amp;#34;: \&amp;#34;10430\&amp;#34; },\&amp;#34;summary\&amp;#34;: \&amp;#34;This is a test issue\&amp;#34;, \&amp;#34;description\&amp;#34;: \&amp;#34;Description\&amp;#34;,\&amp;#34;issuetype\&amp;#34;: { \&amp;#34;id\&amp;#34; : \&amp;#34;1\&amp;#34;}, \&amp;#34;components\&amp;#34; : [{\&amp;#34;id\&amp;#34;:\&amp;#34;10731\&amp;#34;}], \&amp;#34;customfield_10711\&amp;#34; : [{\&amp;#34;id\&amp;#34;:\&amp;#34;10500\&amp;#34;}] } }&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; http://localhost:8080/jira/rest/api/2/issue/ Returns all information for all versions
curl -D- -u uname:pass -X PUT -d &amp;#34;Content-Type: application/json&amp;#34; http://localhost:8080/jira/rest/api/2/project/AN/versions? Returns all issues in a version This URL requires the version ID of a single version which is provided by the above query</description></item><item><title>10 Useful Azure CLI Commands - Part 1</title><link>https://ovenell.ninja/posts/10-useful-azure-cli-commands-part-1/</link><pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate><guid>https://ovenell.ninja/posts/10-useful-azure-cli-commands-part-1/</guid><description>Login into Azure CLI as a service principal
az login \ --service-principal \ -u ${ARM_CLIENT_ID} \ -p ${ARM_CLIENT_SECRET} \ --tenant ${ARM_TENANT_ID} Search for Azure virtual machines available in a specific region
az vm list-sizes -l eastus | grep Standard_N Login with az service principal
az login --service-principal -u ${ARM_CLIENT_ID} -p ${ARM_CLIENT_SECRET} --tenant ${ARM_TENANT_ID} List all accounts in subscription
az account list Set the active Azure subscription
az account set --subscription ${ARM_SUBSCRIPTION_ID} Create a new Azure resource group in the eastus region</description></item></channel></rss>